<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.hxgpark.com/</id><title>SeptemberHX's Blog</title><subtitle>SeptemberHX 的博客小站.</subtitle> <updated>2022-10-20T16:54:30+08:00</updated> <author> <name>SeptemberHX</name> <uri>https://blog.hxgpark.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.hxgpark.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://blog.hxgpark.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 SeptemberHX </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Joplin插件开发教程</title><link href="https://blog.hxgpark.com/posts/JoplinPluginDevelopment/" rel="alternate" type="text/html" title="Joplin插件开发教程" /><published>2022-10-15T00:00:00+08:00</published> <updated>2022-10-20T16:54:04+08:00</updated> <id>https://blog.hxgpark.com/posts/JoplinPluginDevelopment/</id> <content src="https://blog.hxgpark.com/posts/JoplinPluginDevelopment/" /> <author> <name>SeptemberHX</name> </author> <category term="手册" /> <category term="开发" /> <summary> Joplin 是一个 Markdown 笔记工具，相比于 Obsidian 而言，Joplin 是通过关系型数据库存储所有的笔记、信息等，而 Obsidian 是基于文件的。 技术要求 会写代码，会开发 能够读懂英语，需要阅读官方 API 文档 熟悉 JavaScript 的使用：但不是必须得，使用过其他相似的语言也可以。在开发 Enhancement 插件 之前，我也不太熟悉 JS 熟悉 Typescript 的使用：同上，不是必须的 略懂 React、css：同上，不是必须的，仅在开发有 UI 类的插件需要。甚至可以不使用 React 开发，只是能让你的页面代码整洁不少 插件功能分类 在插件的最终作用对象上，可以大致分为以下四类。一般情况下，需要多个类型的功能一起实现才能够提供良好的用户使用体验。 Markdown 编辑器插件：比如编辑器中... </summary> </entry> <entry><title>知识获取</title><link href="https://blog.hxgpark.com/posts/GetKnowledge/" rel="alternate" type="text/html" title="知识获取" /><published>2022-08-28T00:00:00+08:00</published> <updated>2022-08-28T00:00:00+08:00</updated> <id>https://blog.hxgpark.com/posts/GetKnowledge/</id> <content src="https://blog.hxgpark.com/posts/GetKnowledge/" /> <author> <name>SeptemberHX</name> </author> <category term="手册" /> <category term="研究" /> <summary> 在信息爆炸的今天，高效的获取高质量数据能够节省大量时间，同时合理的知识处理能够更好的为个人的工作、学习等打下基础。 知识获取 首先是知识来源的选择，取决于各自的目标，包括但不限于： 微信公众号 InfoQ 的各类 topic：https://www.infoq.cn/topic/ 博客 各论文期刊 其它 不知道有哪些时，多和身边的人沟通即可。 同时，可以看到信息的来源多种多样，得益于 RSS，我们能够让信息主动来找我们，避免了反复在各种软件、设备中横跳获取信息。然而国内网站对 RSS 支持十分糟糕，因此需要借助第三方软件/平台等让原本不支持 RSS 订阅的网站、公众号上发布的信息能够以 RSS 的形式获取到。 RSSHub：社区共同维护的工具，用来从原本不支持 RSS 的网站生成 RSS werss：专注于微信公众号的 RSS 生成 R... </summary> </entry> <entry><title>ReadCube Papers API 记录</title><link href="https://blog.hxgpark.com/posts/ReadCubePapersAPI/" rel="alternate" type="text/html" title="ReadCube Papers API 记录" /><published>2022-05-21T00:00:00+08:00</published> <updated>2022-05-25T12:37:42+08:00</updated> <id>https://blog.hxgpark.com/posts/ReadCubePapersAPI/</id> <content src="https://blog.hxgpark.com/posts/ReadCubePapersAPI/" /> <author> <name>SeptemberHX</name> </author> <category term="开发" /> <summary> 本文用于记录在开发 Joplin 的 ReadCube Papers 插件以实现笔记软件与文献管理软件的联动时，使用到的一些 web 版 papers 的接口。插件地址：joplin-plugin-enhancement。 登录及 cookie 获取 URL：https://services.readcube.com/authentication/login 方法：POST 请求数据类型为 formData，包含： client: webapp api: // 可为空 client_version: // 可为空 email: 用户邮箱 password: 用户密码 返回值 set-cookie 有三条，分别为： _readcube-login_token... </summary> </entry> <entry><title>数学优化模型分类</title><link href="https://blog.hxgpark.com/posts/MathOptimizationModel/" rel="alternate" type="text/html" title="数学优化模型分类" /><published>2022-04-09T12:54:07+08:00</published> <updated>2022-04-17T21:48:46+08:00</updated> <id>https://blog.hxgpark.com/posts/MathOptimizationModel/</id> <content src="https://blog.hxgpark.com/posts/MathOptimizationModel/" /> <author> <name>SeptemberHX</name> </author> <category term="手册" /> <category term="研究" /> <summary> 在云计算、边缘计算、雾计算等领域，优化问题十分常见，为方便后续研究工作，这里记录一些经常出现的数学模型以方便后续求解问题时的快速查阅，每个模型后的解释均来自引用论文。 目前仍在完善中，之前看的论文没有做记录，后续阅读的论文会不断扩充本篇内容 引用的论文属于建模出的模型符合该类，并不是该类模型第一次出现、被定义的论文；被引用文章的出现与否取决于我个人的阅读到它们的顺序 😃 引用论文主要来源： TCC Integer Programming (IP) Integer Linear Programming (ILP) 定义 \(\begin{array}{ll} \operatorname{maximize} &amp;amp; \mathbf{c}^{\mathrm{T}} \mathbf{x} \\ \text { subject t... </summary> </entry> <entry><title>🔐 Softether VPN 搭建及使用</title><link href="https://blog.hxgpark.com/posts/SoftetherVPN/" rel="alternate" type="text/html" title="🔐 Softether VPN 搭建及使用" /><published>2022-04-06T21:10:30+08:00</published> <updated>2022-04-07T15:57:26+08:00</updated> <id>https://blog.hxgpark.com/posts/SoftetherVPN/</id> <content src="https://blog.hxgpark.com/posts/SoftetherVPN/" /> <author> <name>SeptemberHX</name> </author> <category term="手册" /> <category term="Linux" /> <summary> 在一些诸如公司、学校实验室、部分家用网络等内网环境下，部分服务器、NAS、Emby等由于没有公网 IP 导致离开内网环境下无法访问，此时需要搭建 VPN、端口转发等方式来实现内网外访问。考虑到一些 frp 等端口转发工具不关注用户权限、zerotier 及 n2n 等又不能细粒度的控制用户请求，这里选用功能较为全面的 Softether VPN。 如果只是个人使用，仅想访问内网对应服务且不需要权限管理等额外功能，那么推荐使用 frp、zerotier 等工具，配置简易，使用简单，容易上手。 准备 一台具备公网 IP 的服务器：Softether 服务端需要能被所有客户端访问到 CPU、RAM 配置无需太高 网络环境要好，和 VPN 的使用体验直接挂钩 Softether 服务端 安装 现有很多较为完善的教程，直接参考即可。例如：https://... </summary> </entry> </feed>
